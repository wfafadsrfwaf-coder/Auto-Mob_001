
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Player = Players.LocalPlayer

local AUTO_FARM = true

local WORLD_TARGETS = {

[4869039553] = { "Dimorph", "Ptero", "Stego" },
}


local BURST_PER_FRAME      = 8
local RESCAN_DELAY         = 0.02
local REMOTE_MAX_CALLS_PER_SEC   = 20
local REMOTE_MIN_INTERVAL_SEC    = 0.05
local REMOTE_PER_TARGET_COOLDOWN = 0.15
local LOOT_PULL_TIME = 0.3
local LOOT_STAGGER = 0.05

local LOOT_NAMES = { "AshesResourcesModel", "MeatFoodModel", "BaconFoodModel" }








local function waitForMapToLoad(timeout)
timeout = timeout or 20
local startTime = tick()

while tick() - startTime < timeout do
    local char = Player.Character
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    local dragons = char and char:FindFirstChild("Dragons")
    local mobFolder = workspace:FindFirstChild("MobFolder")
    local remotes = game:GetService("ReplicatedStorage"):FindFirstChild("Remotes")

    local placeId = game.PlaceId

    if placeId == 4869039553 then
        if char and hrp and dragons and remotes and mobFolder then
            print("โลกฟาร์มโหลดครบ")
            return true
        end
    elseif placeId == 3475397644 then
        if char and hrp and remotes then
            print("โลกขายของโหลดครบ")
            return true
        end
    end

    task.wait(0.5)
end

warn("⚠️ แมพโหลดไม่ครบภายใน", timeout, "วินาที")
return false
end


local function makeNameSet(list)
local t = {}
if list then for _, n in ipairs(list) do t[n:lower()] = true end end
return t
end
local CURRENT_TARGETS = makeNameSet(WORLD_TARGETS[game.PlaceId])
local LOOT_SET = makeNameSet(LOOT_NAMES)


local PlayerAntiFallPart = nil


local function cleanupPlatforms()
if PlayerAntiFallPart and PlayerAntiFallPart.Parent then
    PlayerAntiFallPart:Destroy()
    PlayerAntiFallPart = nil
    print("🧹 ลบ Player Platform เก่า")
end


for i = 1, 50 do
    local platformName = "DragonAntiFall_" .. tostring(i)
    local platform = workspace:FindFirstChild(platformName)
    if platform then
        platform:Destroy()
    end
end
end


local Character, HRP, Humanoid

local function refreshChar()

cleanupPlatforms()

Character = Player.Character or Player.CharacterAdded:Wait()
HRP = Character:WaitForChild("HumanoidRootPart")
Humanoid = Character:WaitForChild("Humanoid")

-- ✅ กันตกแมพ
task.spawn(function()
    while Character and HRP and Humanoid and Humanoid.Health > 0 do
        if HRP.Position.Y < -50 then
            warn("ตรวจเจอตกแมพ")
            Humanoid.Health = 0
            break
        end
        task.wait(1)
    end
end)
end

refreshChar()
Player.CharacterAdded:Connect(function() task.defer(refreshChar) end)


local function getAttackRemote()
local dragons = Character and Character:FindFirstChild("Dragons")
if not dragons then return nil end
for i = 1, 50 do
    local d = dragons:FindFirstChild(tostring(i))
    if d then
        local remotes = d:FindFirstChild("Remotes")
        if remotes and remotes:FindFirstChild("PlaySoundRemote") then
            return remotes.PlaySoundRemote
        end
    end
end
return nil
end



local function createPlayerAntiFallPart()
if not Character or not HRP then return end


if PlayerAntiFallPart and PlayerAntiFallPart.Parent then
    PlayerAntiFallPart.CFrame = HRP.CFrame * CFrame.new(0, -4, 0)
    return
end

local part = Instance.new("Part")
part.Name = "PlayerAntiFallPlatform"
part.Size = Vector3.new(12, 1, 12)
part.Anchored = true
part.CanCollide = true
part.Transparency = 0.4
part.Material = Enum.Material.ForceField
part.Color = Color3.fromRGB(100, 255, 100)
part.TopSurface = Enum.SurfaceType.Smooth
part.BottomSurface = Enum.SurfaceType.Smooth

part.CFrame = HRP.CFrame * CFrame.new(0, -4, 0)
part.Parent = workspace

PlayerAntiFallPart = part


end


local function createDragonAntiFallParts()
if not Character then return end

local dragons = Character:FindFirstChild("Dragons")
if not dragons then return end

for i = 1, 50 do
    local dragon = dragons:FindFirstChild(tostring(i))
    if dragon and dragon:IsA("Model") then
        local realHitbox = dragon:FindFirstChild("RealHitbox")
        if realHitbox and realHitbox:IsA("BasePart") then
            local platformName = "DragonAntiFall_" .. tostring(i)

      
            local existingPlatform = workspace:FindFirstChild(platformName)
            if existingPlatform then
                existingPlatform.CFrame = realHitbox.CFrame * CFrame.new(0, -8, 0)
            else
 
                local part = Instance.new("Part")
                part.Name = platformName
                part.Size = Vector3.new(15, 1, 15)
                part.Anchored = true
                part.CanCollide = true
                part.Transparency = 0.3
                part.Material = Enum.Material.ForceField
                part.Color = Color3.fromRGB(255, 100, 255)
                part.TopSurface = Enum.SurfaceType.Smooth
                part.BottomSurface = Enum.SurfaceType.Smooth

                part.CFrame = realHitbox.CFrame * CFrame.new(0, -8, 0)
                part.Parent = workspace

                print("สร้าง Dragon Anti-Fall Platform ตัวที่", i)
            end
        end
    end
end
end


local function createAllAntiFallPlatforms()
createPlayerAntiFallPart()
createDragonAntiFallParts()
end


local function startAntiFallLoop()
task.spawn(function()
    while AUTO_FARM do
        if Character and HRP then
            createAllAntiFallPlatforms()
        end
        task.wait(0.1) 
    end
end)
end


local function stickToMob(target)
if not Character or not HRP or not target then return end

local lastCF = nil


while target and target.Parent and Character and HRP do
    local targetCF

    if target:IsA("Model") then
        local root = target:FindFirstChild("HumanoidRootPart") or target.PrimaryPart
        if root then
            targetCF = root.CFrame
        else
            targetCF = target:GetPivot()
        end
    elseif target:IsA("BasePart") then
        targetCF = target.CFrame
    else
        local p = target:FindFirstChildWhichIsA("BasePart", true)
        if p then
            targetCF = p.CFrame
        end
    end

    if targetCF then
        lastCF = targetCF
        local finalCF = targetCF + Vector3.new(0, 6, 0)
        Character:PivotTo(finalCF)
    end

    local health = target:FindFirstChild("Health")
    if not health or health.Value <= 0 then
        break 
    end

    RunService.Heartbeat:Wait()
end


if lastCF then
    local finalCF = lastCF + Vector3.new(0, 6, 0)
    Character:PivotTo(finalCF)
end
end


local function getAllTargets()
local targets = {}
local mobFolder = workspace:FindFirstChild("MobFolder")
if not mobFolder then return targets end

for _, holder in ipairs(mobFolder:GetChildren()) do
    for _, child in ipairs(holder:GetChildren()) do
        if CURRENT_TARGETS[child.Name:lower()] then
            local h = child:FindFirstChild("Health")
            if h and tonumber(h.Value) and h.Value > 0 then
                table.insert(targets, {mob = child, health = h})
            end
        end
    end

    if CURRENT_TARGETS[holder.Name:lower()] then
        local h = holder:FindFirstChild("Health")
        if h and tonumber(h.Value) and h.Value > 0 then
            table.insert(targets, {mob = holder, health = h})
        end
    end
end

return targets
end


local function sellAllItems()
local resources = Player:WaitForChild("Data"):WaitForChild("Resources")
local remotes = game:GetService("ReplicatedStorage"):WaitForChild("Remotes")
local sellRemote = remotes:WaitForChild("SellItemRemote")

local function sellItem(itemName, amount)
    local args = { { ItemName = itemName, Amount = amount } }
    pcall(function()
        sellRemote:FireServer(unpack(args))
    end)
end

local toSell = { "Meat", "Bacon", "Ashes" }
for _, item in ipairs(toSell) do
    local val = resources:FindFirstChild(item)
    if val and val.Value > 0 then
        sellItem(item, val.Value)
        print(" ขาย", item, val.Value, "ชิ้น")
    end
end
end

local function teleportBackToFarmWorld()
local remotes = game:GetService("ReplicatedStorage"):WaitForChild("Remotes")
local teleportRemote = remotes:WaitForChild("WorldTeleportRemote")

local FARM_PLACE_ID = 4869039553
local args = { FARM_PLACE_ID, {} }

print("")
pcall(function()
    teleportRemote:InvokeServer(unpack(args))
end)
end

--================= Looting ===========================
local function anyLootInCamera()
local cam = workspace:FindFirstChild("Camera")
if not cam then return false end
for _, inst in ipairs(cam:GetChildren()) do
    if LOOT_SET[inst.Name:lower()] then return true end
end
return false
end

local function tweenTo(cfTarget, inst)
if inst:IsA("Model") then
    pcall(function() inst:PivotTo(cfTarget) end)
elseif inst:IsA("BasePart") then
    pcall(function() TweenService:Create(inst, TweenInfo.new(LOOT_PULL_TIME), { CFrame = cfTarget }):Play() end)
else
    local p = inst:FindFirstChildWhichIsA("BasePart", true)
    if p then
        pcall(function() TweenService:Create(p, TweenInfo.new(LOOT_PULL_TIME), { CFrame = cfTarget }):Play() end)
    end
end
end

local function pullLootSmooth()
local cam = workspace:FindFirstChild("Camera")
if not cam or not HRP then return end
local targetCF = HRP.CFrame
for _, inst in ipairs(cam:GetChildren()) do
    if LOOT_SET[inst.Name:lower()] then
        tweenTo(targetCF, inst)
        task.wait(LOOT_STAGGER)
    end
end
end

local function collectAllLoot()
local tries = 0
while anyLootInCamera() and tries < 15 do
    pullLootSmooth()
    tries += 1
    RunService.Heartbeat:Wait()
end
end


local Rate = {
tokens = REMOTE_MAX_CALLS_PER_SEC,
lastRefill = os.clock(),
last = 0,
perTarget = setmetatable({}, { __mode = "k" })
}

local function refillTokens()
local now = os.clock()
local dt = now - Rate.lastRefill
if dt > 0 then
    local add = dt * REMOTE_MAX_CALLS_PER_SEC
    Rate.tokens = math.clamp(Rate.tokens + add, 0, REMOTE_MAX_CALLS_PER_SEC)
    Rate.lastRefill = now
end
end

local function canFireForTarget(target)
refillTokens()
local now = os.clock()

if (now - Rate.last) < REMOTE_MIN_INTERVAL_SEC then return false end
local tlast = Rate.perTarget[target]
if tlast and (now - tlast) < REMOTE_PER_TARGET_COOLDOWN then return false end
if Rate.tokens < 1 then return false end

Rate.tokens -= 1
Rate.last = now
Rate.perTarget[target] = now
return true
end


local function pressSpacebar()
local vim = game:GetService("VirtualInputManager")

vim:SendKeyEvent(true, Enum.KeyCode.Space, false, game)
task.wait(0.1) 

vim:SendKeyEvent(false, Enum.KeyCode.Space, false, game)
end

local function attackUntilDead(target, health, remote)

pressSpacebar()


task.spawn(function()
    stickToMob(target)
end)

local lastCheck = os.clock()
local lastHP = tonumber(health.Value) or 0

while target.Parent and health and health.Value and health.Value > 0 do
    for _ = 1, BURST_PER_FRAME do
        if canFireForTarget(target) then
            pcall(function()
                remote:FireServer("Breath", "Mobs", target)
            end)
        else
            break
        end
    end

    RunService.Heartbeat:Wait()

    local now = os.clock()
    if (now - lastCheck) >= 0.5 then
        local curHP = tonumber(health.Value) or lastHP
        if curHP >= lastHP then task.wait(0.1) end
        lastHP = curHP
        lastCheck = now
    end
end
end


local function runContinuousFarm()

startAntiFallLoop()

CURRENT_TARGETS = makeNameSet(WORLD_TARGETS[game.PlaceId])
if not next(CURRENT_TARGETS) then
    warn(("ยังไม่ได้กำหนดมอนใน WORLD_TARGETS สำหรับ PlaceId: %d"):format(game.PlaceId))
    return
end

local remote = getAttackRemote()
if not remote then
    warn("ม่พบ Remotes.PlaySoundRemote ใน Dragon")
    return
end

print("...")

while AUTO_FARM do
    local targets = getAllTargets()

    if #targets == 0 then
        collectAllLoot()
        print("ม่มีมอน กำลังค้นหาใหม่...")
        task.wait(RESCAN_DELAY)
    else
        for _, targetData in ipairs(targets) do
            local target = targetData.mob
            local health = targetData.health

            if target.Parent and health and health.Value > 0 then
                print("โจมตี:", target:GetFullName(), "HP:", health.Value)
                attackUntilDead(target, health, remote)
                collectAllLoot()
            end

            if not AUTO_FARM then break end
            task.wait(RESCAN_DELAY)
        end
    end
end
end


local function createInfoGui()
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AutoFarmInfoGui"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.Parent = game:GetService("CoreGui")

local container = Instance.new("Frame")
container.Name = "InfoContainer"
container.Size = UDim2.new(0, 420, 0, 130)
container.Position = UDim2.new(0.5, -210, 0, 20)
container.BackgroundTransparency = 0.2
container.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
container.BorderSizePixel = 0
container.Parent = screenGui

local title = Instance.new("TextLabel")
title.Name = "TitleLabel"
title.Size = UDim2.new(1, 0, 0, 50)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.Text = "ราคา 300 บาท"
title.TextColor3 = Color3.fromRGB(255, 220, 100)
title.TextStrokeTransparency = 0.7
title.TextSize = 20
title.TextWrapped = true
title.Parent = container

local label = Instance.new("TextLabel")
label.Name = "NEXON HUB เมาเนื้อ"
label.Size = UDim2.new(1, -20, 1, -40)
label.Position = UDim2.new(0, 10, 0, 35)
label.BackgroundTransparency = 1
label.Font = Enum.Font.Gotham
label.TextColor3 = Color3.new(1, 1, 1)
label.TextStrokeTransparency = 0.8
label.TextSize = 22
label.TextXAlignment = Enum.TextXAlignment.Left
label.TextYAlignment = Enum.TextYAlignment.Top
label.RichText = true
label.Text = ""
label.Parent = container

return label
end


local function startResourceTracker()
local label = createInfoGui()
local resources = Player:WaitForChild("Data"):WaitForChild("Resources")

local isTeleporting = false

local function updateLabel()
    local meat = resources:FindFirstChild("Meat")
    local bacon = resources:FindFirstChild("Bacon")
    local ashes = resources:FindFirstChild("Ashes")

    local meatVal = meat and meat.Value or 0
    local baconVal = bacon and bacon.Value or 0
    local ashesVal = ashes and ashes.Value or 0

    label.Text = string.format(
        "<b>📦 โครตเกเลย</b>\n🥩 Meat: <font color='rgb(255,100,100)'>%s</font>\n🥓 Bacon: <font color='rgb(255,180,100)'>%s</font>\n⚱️ Ashes: <font color='rgb(200,200,200)'>%s</font>",
        tostring(meatVal), tostring(baconVal), tostring(ashesVal)
    )

   
    if not isTeleporting and (meatVal >= 10000 and baconVal >= 10000) then
        isTeleporting = true
        warn("...")

        task.wait(1)

        local remotes = game:GetService("ReplicatedStorage"):WaitForChild("Remotes")
        local teleportRemote = remotes:WaitForChild("WorldTeleportRemote")
        local args = {3475397644, {}}
        pcall(function()
            teleportRemote:InvokeServer(unpack(args))
        end)
    end
end

updateLabel()

for _, resName in ipairs({"Meat", "Bacon", "Ashes"}) do
    local res = resources:WaitForChild(resName, 5)
    if res then
        res.Changed:Connect(updateLabel)
    end
end
end

pcall(function()
local mobRemote = game:GetService("ReplicatedStorage"):FindFirstChild("Remotes")
if mobRemote then
    local target = mobRemote:FindFirstChild("MobDamageRemote")
    if target then
        target:Destroy()
    end
end
end)

task.spawn(function()
if AUTO_FARM then
    task.wait(1)

    if not waitForMapToLoad(25) then
        return
    end

    local placeId = game.PlaceId

    if placeId == 4869039553 then
        print("... ")
        task.wait(8)

       
        createAllAntiFallPlatforms()

        startResourceTracker()
        runContinuousFarm()

    elseif placeId == 3475397644 then
        print("กำลังขายทั้งหมด...")
        sellAllItems()
        task.wait(2)
        teleportBackToFarmWorld()

    else
        warn("โลกนี้: " .. tostring(placeId))
    end
end
end)
